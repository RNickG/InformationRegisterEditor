&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтаФорма.Заголовок = "Отчет по данным регистра сведений: " + Параметры.ИмяРегистраСведений;
	ИмяРегистраСведений = Параметры.ИмяРегистраСведений;
	УИДРасшифровкиХранилищаЗначения = Строка(Новый УникальныйИдентификатор);
	ИнициализироватьСКД();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка, ДополнительныеПараметры)
	СтандартнаяОбработка = Ложь;
	
	Если не РасшифроватьХранилищеЗначения(Расшифровка) Тогда
		ИсточникДоступныхНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД);
		ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(АдресДанныхРасшифровки, ИсточникДоступныхНастроек);
		ДоступныеДействия = Новый Массив;
		ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
		
		Оповещение = Новый ОписаниеОповещения("ОбработкаРасшифровки_Продолжение", ЭтаФорма, Расшифровка);
		ОбработкаРасшифровки.ПоказатьВыборДействия(Оповещение, Расшифровка, ДоступныеДействия, ,Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаРасшифровки_Продолжение(ВыполненноеДействие, ПараметрВыполненногоДействия, ДополнительныеПараметры) Экспорт 
    Если ПараметрВыполненногоДействия <> Неопределено Тогда
        
        Если ВыполненноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда
            ПоказатьЗначение(,ПараметрВыполненногоДействия);
        КонецЕсли;
        
    КонецЕсли;        
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	
	СКД = ПолучитьИзВременногоХранилища(АдресХранилищаСКД);
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ОтображатьУИД = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтображатьУИД")).Значение;
	Если Не ОтображатьУИД Тогда
		Для Каждого ПолеВыбора из Настройки.Выбор.Элементы Цикл
			Если ТипЗнч(ПолеВыбора) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") Тогда
				Для каждого ПолеВыбора1 Из ПолеВыбора.Элементы Цикл
					Если ПолеВыбора1.Заголовок = "УИД" Тогда
						ПолеВыбора1.Использование = Ложь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	Макет = КомпоновщикМакета.Выполнить(СКД, Настройки, ДанныеРасшифровки, ,Тип("ГенераторМакетаКомпоновкиДанных"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(Макет,,ДанныеРасшифровки,Истина);
	
	ТабДок.Очистить();
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	АдресДанныхРасшифровки = ПоместитьВоВременноеХранилище(ДанныеРасшифровки, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьСКД()
	
	// создаем новую Схему компоновки данных
	СКД = Новый СхемаКомпоновкиДанных;
	
	// работаем  с настройками по умолчанию
	НастройкиСКД = СКД.НастройкиПоУмолчанию;
	
	// создаем локальный источник данныз
	ИсточникДанных = СКД.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных";
	ИсточникДанных.ТипИсточникаДанных = "local";
	
	// создам набор данных Запрос
	НаборДанных = СКД.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	НаборДанных.Имя = "НаборДанных1";
	НаборДанных.ИсточникДанных = "ИсточникДанных";
	НаборДанных.АвтоЗаполнениеДоступныхПолей = Истина;
	
	// добавляем параметр СКД
	ПараметрСКД = СКД.Параметры.Добавить();
	ПараметрСКД.Имя = "ОтображатьУИД";
	ПараметрСКД.Заголовок = "Отображать УИД ссылок";
	ПараметрСКД.ТипЗначения = Новый ОписаниеТипов("Булево");
	ПараметрСКД.Использование = ИспользованиеПараметраКомпоновкиДанных.Всегда;
	ПараметрСКД.ВключатьВДоступныеПоля = Ложь;
	
	// добавляем параметр СКД в параметры данных, пользовательские настройки, задаем значение параметра
	ПараметрДанных = НастройкиСКД.ПараметрыДанных.Элементы.Добавить();
	ПараметрДанных.Параметр = Новый ПараметрКомпоновкиДанных("ОтображатьУИД");
	ПараметрДанных.Использование = Истина;
	ПараметрДанных.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
	ПараметрДанных.Значение = Ложь;
	
	// добавляем в пользовательские настройки настройки СКД
	НастройкиСКД.Отбор.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
	НастройкиСКД.Выбор.ИдентификаторПользовательскойНастройки = Новый  УникальныйИдентификатор;
	//НастройкиСКД.Порядок.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
	НастройкиСКД.Структура.ИдентификаторПользовательскойНастройки = Новый УникальныйИдентификатор;
	
	// отключаем вывод значений параметров в результат отчета
	НастройкиСКД.ПараметрыВывода.УстановитьЗначениеПараметра("ВыводитьПараметрыДанных", ТипВыводаТекстаКомпоновкиДанных.НеВыводить);
	
	// создаем структуру отчета - группировка "Детальные записи" с авто полем
	НоваяГруппировка = НастройкиСКД.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	НоваяГруппировка.Использование = Истина;
	
	АвтоПоле = НоваяГруппировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	АвтоПоле.Использование = Истина;	
	
	// добавляем в поля выбора системное поле "Номер по порядку"
	ДбавитьПолеВыбора(НастройкиСКД, "СистемныеПоля.НомерПоПорядку");
	
	ТекстЗапроса  = "Выбрать 
	|%ПОЛЯ% 
	|Из РегистрСведений.%ИМЯРС% как РС";
	ПоляЗапроса = "";
	ИменаКлючевыхПолей = Новый Массив;
	
	Для Каждого СтандартныйРеквизит из Метаданные.РегистрыСведений[ИмяРегистраСведений].СтандартныеРеквизиты Цикл
		Если СтандартныйРеквизит.Имя = "НомерСтроки" Тогда
			Продолжить;
		КонецЕсли;
		ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + "РС."+СтандартныйРеквизит.Имя + Символы.ПС;
		
		ИменаКлючевыхПолей.Добавить(СтандартныйРеквизит.Имя);
		
		ДобавитьПолеНабораДанных(НаборДанных, СтандартныйРеквизит.Имя, СтандартныйРеквизит.Тип);
		
		ДбавитьПолеВыбора(НастройкиСКД, СтандартныйРеквизит.Имя);
	КонецЦикла;
	
	Для Каждого Измерение из Метаданные.РегистрыСведений[ИмяРегистраСведений].Измерения Цикл
		
		Если Не ДостпноИспользованиеРеквизита(Измерение) Тогда
			Продолжить;
		КонецЕсли;
		ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + "РС."+Измерение.Имя + Символы.ПС;
		
		ИменаКлючевыхПолей.Добавить(Измерение.Имя);

		ДобавитьПолеНабораДанных(НаборДанных, Измерение.Имя, Измерение.Тип);
		
		Если СодержитСылочныйТип(Измерение.Тип) Тогда
			ДбавитьПолеВыбора(НастройкиСКД, Измерение.Имя, СКД, Истина);
		Иначе
			ДбавитьПолеВыбора(НастройкиСКД, Измерение.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Ресурс из Метаданные.РегистрыСведений[ИмяРегистраСведений].Ресурсы Цикл
		
		Если Не ДостпноИспользованиеРеквизита(Ресурс) Тогда
			Продолжить;
		КонецЕсли;
		Если Ресурс.РежимПароля Тогда
			ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + "ПРЕДСТАВЛЕНИЕ(РС." + Ресурс.Имя + ") КАК " + Ресурс.Имя + Символы.ПС;
			ТипПоляНабораДанных = Ресурс.Тип;
		ИначеЕсли Ресурс.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда
			ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + """<Хранилище значения>"" КАК " + Ресурс.Имя + Символы.ПС;
			ТипПоляНабораДанных = Новый ОписаниеТипов("Строка");
			ДобавитьРасшифровкуПоляХранилищеЗначения(СКД, Ресурс.Имя, ИменаКлючевыхПолей);
		Иначе
			ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + "РС."+Ресурс.Имя + Символы.ПС;
			ТипПоляНабораДанных = Ресурс.Тип;
		КонецЕсли;
		
		ДобавитьПолеНабораДанных(НаборДанных, Ресурс.Имя, ТипПоляНабораДанных); 
		
		Если СодержитСылочныйТип(Ресурс.Тип) Тогда
			ДбавитьПолеВыбора(НастройкиСКД, Ресурс.Имя, СКД, Истина);
		Иначе
			ДбавитьПолеВыбора(НастройкиСКД, Ресурс.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Реквизит из Метаданные.РегистрыСведений[ИмяРегистраСведений].Реквизиты Цикл
		
		Если Не ДостпноИспользованиеРеквизита(Реквизит) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Реквизит.РежимПароля Тогда
			ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + "ПРЕДСТАВЛЕНИЕ(РС." + Реквизит.Имя + ") КАК " + Реквизит.Имя + Символы.ПС;
			ТипПоляНабораДанных = Реквизит.Тип;
		ИначеЕсли Реквизит.Тип.СодержитТип(Тип("ХранилищеЗначения")) Тогда
			ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + """<Хранилище значения>"" КАК " + Реквизит.Имя + Символы.ПС;
			ТипПоляНабораДанных = Новый ОписаниеТипов("Строка");
			ДобавитьРасшифровкуПоляХранилищеЗначения(СКД, Реквизит.Имя, ИменаКлючевыхПолей);
		Иначе
			ПоляЗапроса = ПоляЗапроса + ?(ПоляЗапроса = "", "", ",") + "РС."+Реквизит.Имя + Символы.ПС;
			ТипПоляНабораДанных = Реквизит.Тип;
		КонецЕсли;
		
		ДобавитьПолеНабораДанных(НаборДанных, Реквизит.Имя, ТипПоляНабораДанных); 
		
		Если СодержитСылочныйТип(Реквизит.Тип) Тогда
			ДбавитьПолеВыбора(НастройкиСКД, Реквизит.Имя, СКД, Истина);
		Иначе
			ДбавитьПолеВыбора(НастройкиСКД, Реквизит.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ПОЛЯ%", ПоляЗапроса);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИМЯРС%", ИмяРегистраСведений);
	
	НаборДанных.Запрос = ТекстЗапроса;
		
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(СКД, ЭтаФорма.УникальныйИдентификатор);
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресХранилищаСКД));
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиСКД);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьПолеНабораДанных(НаборДанных, ПутьКДанным, ТипДанных)
	ДобавленноеПоле = НаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
	ДобавленноеПоле.ПутьКДанным = ПутьКДанным;
	ДобавленноеПоле.Поле = ПутьКДанным;
	ДобавленноеПоле.Заголовок = ПутьКДанным;
	ДобавленноеПоле.ТипЗначения = ТипДанных;		
КонецПроцедуры

&НаСервере
Процедура ДбавитьПолеВыбора(НастройкиСКД, ПутьКДанным, СКД = Неопределено, ПолеСГУИД = Ложь)
	Если ПолеСГУИД Тогда
		ДобавитьВычисляемоеПолеГУИД(СКД, ПутьКДанным);
		ГруппаПолейВыбора = НастройкиСКД.Выбор.Элементы.Добавить(Тип("ГруппаВыбранныхПолейКомпоновкиДанных"));
		ГруппаПолейВыбора.Расположение = РасположениеПоляКомпоновкиДанных.Вертикально;
		ГруппаПолейВыбора.Заголовок = ПутьКДанным;
		
		ДобавленноеПолеВыбора = ГруппаПолейВыбора.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ДобавленноеПолеВыбора.Поле = Новый ПолеКомпоновкиДанных(ПутьКДанным);
		ДобавленноеПолеВыбора.Заголовок = "Значение";
		ДобавленноеПолеВыбора.Использование = Истина;
		
		ДобавленноеПолеВыбора = ГруппаПолейВыбора.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ДобавленноеПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("ГУИД_"+ПутьКДанным);
		ДобавленноеПолеВыбора.Заголовок = "УИД";
		ДобавленноеПолеВыбора.Использование = Истина;
	Иначе
		ДобавленноеПолеВыбора = НастройкиСКД.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ДобавленноеПолеВыбора.Поле = Новый ПолеКомпоновкиДанных(ПутьКДанным);
		ДобавленноеПолеВыбора.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВычисляемоеПолеГУИД(СКД, ПутьКДанным)
	ДобавляемоеВычисляемоеПоле = СКД.ВычисляемыеПоля.Добавить();
	ДобавляемоеВычисляемоеПоле.Заголовок = "ГУИД_"+ПутьКДанным;
	ДобавляемоеВычисляемоеПоле.ПутьКданным = "ГУИД_"+ПутьКДанным;
	ДобавляемоеВычисляемоеПоле.Выражение = "XMLСтрока("+ПутьКДанным+")"
КонецПроцедуры

&НаСервере
Процедура ДобавитьРасшифровкуПоляХранилищеЗначения(СКД, ИмяПоля, ИменаКлючевыхПолей)
	
			МакетыСКД = СКД.Макеты;
			МакетыПолейСКД = СКД.МакетыПолей;

			// создаем описание макета СКД
			ОписаниеМакетаСКД = МакетыСКД.Добавить();
			ОписаниеМакетаСКД.Имя = "МакетСКД_"+ИмяПоля;
			
			// создаем макет области компоновки (МакетОбластиКомпоновкиДанных)
			МакетОбластиКомпоновки = Новый МакетОбластиКомпоновкиДанных;
			// добавляем в макет строку таблицы области компоновки (СтрокаТаблицыОбластиКомпоновкиДанных)
			СтрокаТаблицыОбластиКомпоновкиДанных = МакетОбластиКомпоновки.Добавить(Тип("СтрокаТаблицыОбластиКомпоновкиДанных"));
			// добавляем в строку таблицы новую ячейку (ЯчейкаТаблицыОбластиКомпоновкиДанных)
			Ячейка = СтрокаТаблицыОбластиКомпоновкиДанных.Ячейки.Добавить();
			// добавляем в ячейку поле данных (ПолеОбластиКомпоновкиДанных)
			ПолеОбластиКомпоновкиДанных = Ячейка.Элементы.Добавить(Тип("ПолеОбластиКомпоновкиДанных"));
			// присваиваем значению поля в ячейке - параметр компоновки данных (ПараметрКомпоновкиДанных)
			ПолеОбластиКомпоновкиДанных.Значение = Новый ПараметрКомпоновкиДанных(ИмяПоля); 
			// устанавливаем МакетОбластиКомпоновки как Макет у Описания макета
			ОписаниеМакетаСКД.Макет = МакетОбластиКомпоновки;
			// добавляем параметр вырвжение описания макета СКД - выражение компоновики данных (ПараметрОбластиВыражениеКомпоновкиДанных)
			ПараметрВыражение = ОписаниеМакетаСКД.Параметры.Добавить(Тип("ПараметрОбластиВыражениеКомпоновкиДанных"));
			ПараметрВыражение.Имя = ИмяПоля;
			ПараметрВыражение.Выражение = ИмяПоля;
			// добавляем параметр расшифровки описания макета СКД - расшифровка компоновки данных
			ПараметрРасшифровка = ОписаниеМакетаСКД.Параметры.Добавить(Тип("ПараметрОбластиРасшифровкаКомпоновкиДанных"));
			ПараметрРасшифровка.Имя = "Расшифровка_" + ИмяПоля;
			ПараметрРасшифровка.ОсновноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.Расшифровать;
			// добавим выражение поля расшифровки
			ВыражениеПоляРасшифровки = ПараметрРасшифровка.ВыраженияПолей.Добавить();
			ВыражениеПоляРасшифровки.Поле = ИмяПоля;
			//ВыражениеПоляРасшифровки.Выражение = "ГРУППОВАЯОБРАБОТКА("""+ВыражениеРасшифровки+""")";
			ВыражениеПоляРасшифровки.Выражение = """" + УИДРасшифровкиХранилищаЗначения + """";
			
			Для Каждого ИмяКлючевогоПоля из ИменаКлючевыхПолей Цикл 
				ВыражениеПоляРасшифровки = ПараметрРасшифровка.ВыраженияПолей.Добавить();
				ВыражениеПоляРасшифровки.Поле = ИмяКлючевогоПоля;
				ВыражениеПоляРасшифровки.Выражение = ИмяКлючевогоПоля;
			КонецЦикла;
			
			// устанавливаем расшифровку для ячейки
			Ячейка.Оформление.УстановитьЗначениеПараметра("Расшифровка", Новый ПараметрКомпоновкиДанных("Расшифровка_"+ИмяПоля));
			// устанавливаем созданное описание макета как макет поля СКД
			МакетПоляСКД = МакетыПолейСКД.Добавить();
			МакетПоляСКД.Макет = "МакетСКД_"+ИмяПоля;
			МакетПоляСКД.Поле = ИмяПоля;
	
КонецПроцедуры

&НаСервере
Функция ДостпноИспользованиеРеквизита(Знач МетаданныеРеквизит)
	
	ВходитВСоставФО = Ложь;
	Для Каждого ФО из Метаданные.ФункциональныеОпции Цикл
		Если ФО.Состав.Содержит(МетаданныеРеквизит) Тогда
			ВходитВСоставФО = Истина;
			Если ПолучитьФункциональнуюОпцию(ФО.Имя) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если не ВходитВСоставФО Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция СодержитСылочныйТип(ОписаниеТипов)
	Для Каждого ТипЗначения из ОписаниеТипов.Типы() Цикл
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗначения) 
		Или ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗначения)
		Или Документы.ТипВсеСсылки().СодержитТип(ТипЗначения)
		Или ПланыОбмена.ТипВсеСсылки().СодержитТип(ТипЗначения) 
		Или БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗначения)
		Или Задачи.ТипВсеСсылки().СодержитТип(ТипЗначения) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция РасшифроватьХранилищеЗначения(Расшифровка)
	
	ПараметрыФормы = ПолучитьДанныеДляФормыЗначенияХранилища(Расшифровка);
	Если не ПараметрыФормы = Неопределено Тогда
		ОткрытьФорму("ВнешняяОбработка.РедактроРегистровСведений.Форма.ФормаЗначениеХранилища",ПараметрыФормы ,ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеДляФормыЗначенияХранилища(Расшифровка)
	
	ДанныеРасшифровки = ПолучитьИзВременногоХранилища(АдресДанныхРасшифровки);
	ЭлементРасшифровки = ДанныеРасшифровки.Элементы[Расшифровка];
	ПоляРасшифровки = ЭлементРасшифровки.ПолучитьПоля();
	ПолеРасшифровки = ПоляРасшифровки[0];
	Если ПолеРасшифровки.Значение = УИДРасшифровкиХранилищаЗначения Тогда
		
		ИмяРеквизита = ПолеРасшифровки.Поле;
		
		КлючЗаписи = Новый Структура;
		Для Итератор = 1 По ПоляРасшифровки.Количество()-1 Цикл
			КлючЗаписи.Вставить(ПоляРасшифровки[Итератор].Поле, ПоляРасшифровки[Итератор].Значение);
		КонецЦикла;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючЗаписи", КлючЗаписи);
		ПараметрыФормы.Вставить("ИмяРеквизита", ИмяРеквизита);
		ПараметрыФормы.Вставить("ИмяРегистраСведений", ИмяРегистраСведений);
		
		Возврат ПараметрыФормы;
	Иначе 
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции



